# -----------------------------------------------------------------------------
# This is a sample nginx.conf of ngx_cc v2
# 	- need build nginx with lua-nginx-module and per-worker-listener patch
#		- http://wiki.nginx.org/HttpLuaModule#Installation
#		- https://github.com/arut/nginx-patches
#	- need one shared_dict, default name 'ngxcc_dict'
# 	- accept_mutex must off (required by per-worker-listener)
# 	- install tasks management is optional, will work in kada channel
# -----------------------------------------------------------------------------

user  nobody;
worker_processes  4;
#pid		logs/nginx.pid;

events {
	worker_connections  10240;
	accept_mutex off;
}

http {
	# include	   mime.types;

	## init for per-worker,  the '$prefix' setting by command line:
	##		> sbin/nginx -p ...
	lua_package_path '$prefix/?.lua;;';
	init_worker_by_lua_file '$prefix/init_worker.lua';

	# lua_code_cache  off;
	lua_shared_dict ngxcc_dict 10M;
	uninitialized_variable_warn off; # recommend

	# install <tasks management> into request's response time
	rewrite_by_lua 'local kada=ngx_cc.channels["kada"]; if kada then kada.tasks:run() end';

	# test with bash:
	# 	> for port in 80 {8010..8013}; do curl "http://127.0.0.1:$port/test"; done
	server {
		listen		80;
		listen		8010 per_worker;
		server_name	localhost;

		location /test {
			content_by_lua '
				ngx.say("pid: " .. ngx.var.pid .. ", port: " .. ngx.var.server_port .. "\tOkay.")';
		}

		# caster, internal only
		location ~ ^/([^/]+)/cast {
			internal;
			set_by_lua $cc_host 'return ngx.var.cc_host';
			set_by_lua $cc_port 'local p = ngx.var.cc_port or ""; return (p=="" or p=="80") and "" or ":"..p;';
			rewrite ^/([^/]+)/cast/(.*)$ /$2 break;
			rewrite ^/([^/]+)/cast([^/]*)$ /$1/invoke$2 break;
			proxy_pass http://$cc_host$cc_port;
			proxy_read_timeout		2s;
			proxy_send_timeout		2s;
			proxy_connect_timeout	2s;
		}

		# invoke at worker listen port
		location ~ ^/([^/]+)/invoke {
			content_by_lua 'ngx_cc.invokes(ngx.var[1])';
		}

		# hub at main listen port(80), will redirect to route listen port
		location ~ ^/([^/]+)/hub {
			content_by_lua 'ngx_cc.invokes(ngx.var[1], true)';
		}
	}
}
